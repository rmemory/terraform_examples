# nat gw
# This allows instances inside the VPC to access the 
# internet ... but not the other way around.
# This can be useful to perform updates of instances on 
# private subnets

# elastic IP
resource "aws_eip" "nat" {
  provider = aws.region-master
  vpc      = true
}

resource "aws_nat_gateway" "nat-gw" {
  provider      = aws.region-master
  allocation_id = "aws_eip.nat.id"
  subnet_id     = "aws_subnet.master-subnet-public-1.id"
  depends_on    = [aws_internet_gateway.igw-master]
}

# Route table for NAT
resource "aws_route_table" "master-nat-route-table" {
  provider = aws.region-master
  vpc_id   = "aws_vpc.master.id"
  route {
    cidr_block     = "0.0.0.0/0"
    nat_gateway_id = "aws_nat_gateway.nat-gw.id"
  }

  tags = {
    Name = "Master Nat Route Table"
  }
}

# route associations private
resource "aws_route_table_association" "main-private-1-a" {
  provider       = aws.region-master
  subnet_id      = "aws_subnet.master-subnet-private-1.id"
  route_table_id = "aws_route_table.master-nat-route-table.id"
}
# resource "aws_route_table_association" "master-subnet-private-2-a" {
#   subnet_id      = "aws_subnet.master-subnet-private-2.id"
#   route_table_id = "aws_route_table.master-nat-route-table.id"
# }

